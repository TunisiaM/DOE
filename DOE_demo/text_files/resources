Resource Bank:

Now that you know the fundamentals of web developmemt through HTML and how to create a website, you can use your knowledge to continue to build a solid foundation of HTML and/or broaden your horizons to front-end development (what the user is able to see). Below is a resource bank that may be helpful for you to continue to learn and are free (as well as your students)! 

Code.org

Codecademy

Coursera

Google for Education: Google Computer Science: https://www.google.com/edu/resources/computerscience/learning/

Mouse Squad

StudyWeb.com: http://www.studyweb.com/50-killer-online-resources-for-computer-science-students/
--50+ Killer Online Resources for Computer Science Students


Treehouse

Specifically For Students

Code/Interactive: http://www.weare.ci/programs/

The Knowledge House

Online Courses
https://www.quora.com/What-are-the-best-free-online-resources-for-learning-computer-science
Introductory Courses 

Intro to Computer Science, pick two of three: 
Introduction to Computer Science and Programming: MIT
Intensive Introduction to Computer Science: Harvard
Introduction to Computer Science and Programming Methodology: Stanford
Programming Abstractions (Second Course in Unit): Stanford
Basic mathematics, pick one of two: 
Mathematics for Computer Science: MIT
Discrete Mathematics: ArsDigita

Core Courses 

Data Structures and Algorithms, pick one of two:
Introduction to Data Structures and Algorithms: UNSW
Introduction to Algorithms: MIT
Operating Systems:
Operating Systems and Systems Programming: Berkeley
Programming Languages and Methodologies:
Programming Paradigms: Stanford
Computer Architecture:
Computer Architecture: Carnegie Mellon
Networking:
Fundamentals of Computer Networking: Manhattan College
Data Communications:
Introduction to Data Communications:  Thammasat University
Cryptography and Security:
Introduction to Cryptography: Ruhr University

Electives 

Web Development:
Building Dynamic Websites: Harvard
Data Structures:
Advanced Data Structures: MIT
Systems:
Computer System Engineering: MIT
Programming Languages:
Principles of Programming Languages: IIT
Security:
Introduction to IT Security: Thammasat University
Security and Cryptography: Thammasat University
Cryptography:
Bilinear Pairings in Cryptography: BIU
App Development:
iPhone Application Development: ITU
Android Application Development: ITU
Artificial Intelligence:
Artificial Intelligence: HRW
Artificial Intelligence: Berkeley
Graphics:
Computer Graphics: Berkeley
Math:
Statistics and Probability: Harvard
Probabilistic Systems Analysis and Applied Probability: MIT



Online Pt. 2
https://www.quora.com/What-are-the-best-free-online-resources-for-learning-computer-science
Introduction:

Introduction to Computer Science and Programming: MIT
Intensive Introduction to Computer Science: Harvard
Introduction to Computer Science and Programming Methodology: Stanford
Programming Abstractions (Second Course in Unit): Stanford
Java Programming Basics via Udacity
An Introduction to Interactive Programming in Python (Part 1) via Coursera
An Introduction to Interactive Programming in Python (Part 2) via Coursera
Introduction to Computer Science and Programming Using Python via edX
Introduction to Interactive Programming in Python - Rice
Programming:

Programming 1: University of Toronto
Programming 2: University of Toronto
Programming Paradigms: Stanford
Object Oriented Programming: MIT
Object Oriented Programming in C++: ITU
Object Oriented Programming in Java via Coursera
Design in Computing: UNSW
Principles of Programming Languages: IIT
C++ for C Programmers: UC Santa Cruz
Heterogeneous Parallel Programming: University of Illinois
Compilers: Stanford
Java Programming: Principles of Software Design via Coursera
Code Yourself! An Introduction to Programming via Coursera
Java Programming: Solving Problems with Software via Coursera
Software Engineering:

Software Engineering: Berkeley
Elements of Software Construction: MIT
Mobile Software Engineering: Harvard
Software Engineering for Scientific Computing: Berkeley
Theory of Computation:

Introduction to the Theory of Computation: Stonehill
Principles of Computing: Rice
Theory of Computation: UC Davis
Theory of Computation: IIT Kanpur
Principles of Computing (Part 1) via Coursera
Principles of Computing (Part 2) via Coursera
Mathematics:

Mathematics for Computer Science: MIT
Discrete Mathematics: ArsDigita
Linear Algebra through Computer Science Applications: Brown
Discrete Math and Probability Theory: Berkeley
Probability and Statistics - UC Berkeley
Statistics and Probability: Harvard
Probabilistic Systems Analysis and Applied Probability: MIT
Statistical Inference: Johns Hopkins
Data Analysis and Statistical Inference: Duke
Probabilistic Graphical Models via Coursera
Computer Architecture:

Computer Architecture: Carnegie Mellon
Computer Architecture: Princeton
Operating Systems:

Operating Systems and Systems Programming: Berkeley
Introduction to Linux: edX
Systems:

Computer System Engineering: MIT
The Hardware/Software Interface: University of Washington
Networking and Data Communications:

Fundamentals of Computer Networking: Manhattan College
Introduction to Data Communications: Thammasat University
Computer Networks: University of Washington
Internet Technologies and Applications: Thammasat University
Cryptography and Security:

Introduction to Cryptography: Ruhr University
Cryptography 1: Stanford
Cryptography 2: Stanford
Bilinear Pairings in Cryptography: BIU
Cryptography I via Coursera
Security:

Introduction to IT Security: Thammasat University
Security and Cryptography: Thammasat University
Designing and Executing Information Security Strategies: University of Washington
Information Security and Risk Management in Context: University of Washington
Software Security via Coursera
Hardware Security via Coursera
Usable Security via Coursera
Algorithms and DS:

Algorithms
Introduction to Algorithms: MIT
Algorithms I - Princeton
Algorithms: Design and Analysis, Part 1 via Coursera
Algorithms: Design and Analysis, Part 2 via Coursera
Advanced Algorithms and Complexity via Coursera
Approximation Algorithms Part I via Coursera
Approximation Algorithms Part II via Coursera
Algorithmic Thinking (Part 1) via Coursera
Algorithmic Thinking (Part 2) via Coursera
Efficient Algorithms and Intractable Problems: Berkeley
Data Structures
Introduction to Data Structures and Algorithms: UNSW
Data Structures: Berkeley
Advanced Data Structures: MIT
Data Structures Made Easy via Coursera
Data Structures via Coursera
Advanced Data Structures in Java via Coursera
Data Management:

Introduction to Databases: Stanford
Introduction to Modern Database Systems: Saylor
Introduction to Database Management Systems: KU Leuven University
Database Management Systems: Ars Digita
Advanced Databases: Saylor
Database Management Essentials via Coursera
Data Management and Visualization via Coursera
Hadoop Platform and Application Framework via Coursera
Data

Science
Introduction to computing and data science - MITx
Introduction to Data Science - Washington
Data Science Essentials via edX
Introduction to Python for Data Science via edX
Introduction to R for Data Science via edX
Python for Genomic Data Science via Coursera
Process Mining: Data science in Action via Coursera
Analytics
Introduction to Big Data via Coursera
Managing Data Analysis via Coursera
Exploratory Data Analysis via Coursera
Managing Big Data with MySQL via Coursera
Big Data Analysis with Apache Spark via edX
Big Data Integration and Processing via Coursera
Big Data: from Data to Decisions via FutureLearn
Big Data Modeling and Management Systems via Coursera
Graph Analytics for Big Data via Coursera
Others
Getting and Cleaning Data via Coursera
Relational Database Support for Data Warehouses via Coursera
Pattern Discovery in Data Mining via Coursera
Framework for Data Collection and Analysis via Coursera
Data Manipulation at Scale: Systems and Algorithms via Coursera
Dealing With Missing Data via Coursera
Data Warehouse Concepts, Design, and Data Integration via Coursera
Data Visualization via Coursera
Artificial Intelligence:

Introduction to Artificial Intelligence: Berkeley
Artificial Intelligence: HRW
Artificial Intelligence: Berkeley
Machine Learning:

Machine Learning: Stanford
Principles of Machine Learning via edX
Practical Machine Learning via Coursera
Machine Learning via Coursera
Machine Learning Foundations: A Case Study Approach via Coursera
Machine Learning: Regression via Coursera
Machine Learning: Clustering & Retrieval via Coursera
Machine Learning With Big Data via Coursera
Machine Learning for Data Analysis via Coursera
Machine Learning: Classification via Coursera
App Development:

Basics
Building Mobile Applications: Harvard
Foundations of Objective-C App Development via Coursera
Developing Intelligent Apps via edX
CODAPPS: Coding mobile apps for entrepreneurs via Coursera
Engineering Maintainable Android Apps via Coursera
Android
Android Application Development: ITU
Android Basics: Multi-screen Apps via Udacity
Build Your First Android App (Project-Centered Course) via Coursera
Java for Android via Coursera
Android Basics: Networking via Udacity
Programming Mobile Applications for Android Handheld Systems: Part 1 via Coursera
Programming Mobile Applications for Android Handheld Systems: Part 2 via Coursera
iOS
iPhone Application Development: ITU
Best Practices for iOS User Interface Design via Coursera
Toward the Future of iOS Development with Swift via Coursera
iOS App Development Basics via Coursera
App Design and Development for iOS via Coursera
Web
Intro to Progressive Web Apps via Udacity
Web Application Development: Basic Concepts via Coursera
Web Application Development with JavaScript and MongoDB viaCoursera
Single Page Web Applications with AngularJS via Coursera
Web Accessibility via Udacity
How To Create a Website in a Weekend! (Project-Centered Course) viaCoursera
HTML, CSS, and Javascript for Web Developers via Coursera
HTML, CSS and JavaScript via Coursera
Introduction to HTML5 via Coursera
Introduction to CSS3 via Coursera
Programming and the Web for Beginners via Coursera
Responsive Website Basics: Code with HTML, CSS, and JavaScript viaCoursera
Responsive Website Tutorial and Examples via Coursera
Responsive Web Design via Coursera
Front-End Web UI Frameworks and Tools via Coursera
Building Dynamic Websites: Harvard
Interactivity with JavaScript via Coursera
Front-End JavaScript Frameworks: AngularJS via Coursera
Other Languages:

Ruby on Rails: An Introduction via Coursera
Ruby on Rails Web Services and Integration with MongoDB viaCoursera
Rails with Active Record and Action Pack via Coursera
The Raspberry Pi Platform and Python Programming for the Raspberry Pi via Coursera
Interfacing with the Raspberry Pi via Coursera
R Programming via Coursera
Introduction to Neurohacking In R via Coursera
Functional Programming Principles in Scala via Coursera
Functional Program Design in Scala via Coursera
Server-side Development with NodeJS via Coursera
Introduction To Swift Programming via Coursera
M101J: MongoDB for Java Developers via MongoDB University
M101JS: MongoDB for Node.js Developers via MongoDB University
M101P: MongoDB for Developers via MongoDB University
M102: MongoDB for DBAs via MongoDB University
M202: MongoDB Advanced Deployment and Operations via MongoDB University
Game:

Beginning Game Programming with C# via Coursera
Combinatorial Game Theory - Georgia Tech
Games, Sensors and Media via Coursera
Natural Language Processing:

Natural Language Processing: Columbia
Natural Language Processing: Stanford
Digital Media:

Digital Image Processing: Purdue
Computer Graphics: Berkeley
Computer Graphics: ITU
Image processing Duke
Creative Programming for Digital Media & Mobile Apps via Coursera
Interactive Computer Graphics via Coursera